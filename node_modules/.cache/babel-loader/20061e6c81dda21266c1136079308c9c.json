{"ast":null,"code":"var _jsxFileName = \"D:\\\\SuiviDiplomesFront\\\\src\\\\components\\\\index\\\\grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 120\n}, {\n  field: 'email',\n  headerName: 'Email',\n  width: 300,\n  editable: false\n}, {\n  field: 'role',\n  headerName: 'Role',\n  width: 300,\n  editable: false\n}];\nexport default function Grid() {\n  _s();\n\n  const [select, setSelection] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const handleRowSelection = e => {\n    // prints correct indexes of selected rows\n    console.log(e); // missing the first row selected\n\n    setSelection(e.selectionModel);\n    console.log(select);\n  };\n\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:8000/api/users\").then(response => {\n      setUsers(response.data.users); // console.log(response.data.users);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '80%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: users,\n        columns: columns,\n        pageSize: 5,\n        checkboxSelection: true,\n        disableSelectionOnClick: true,\n        autoHeight: true,\n        NoRowsOverlay: true,\n        onSelectionModelChange: handleRowSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Editer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Supprimer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Grid, \"CbaC3/nh8hfBPXnq8w5hm6j2DwE=\");\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["D:/SuiviDiplomesFront/src/components/index/grid.js"],"names":["React","useEffect","useState","DataGrid","Container","Button","axios","columns","field","headerName","width","editable","Grid","select","setSelection","users","setUsers","handleRowSelection","e","console","log","selectionModel","get","then","response","data","catch","err","height"],"mappings":";;;AAAA,OAAQA,KAAR,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,UAAU,EAAE,IAA3B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CADc,EAEd;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,UAAU,EAAE,OAFd;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAFc,EAQd;AACEH,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,UAAU,EAAE,MAFd;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CARc,CAAhB;AAqBA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACa,KAAD,EAAOC,QAAP,IAAiBd,QAAQ,CAAC,EAAD,CAA/B;;AAEA,QAAMe,kBAAkB,GAAIC,CAAD,IAAO;AAE9B;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAH6B,CAK7B;;AACAJ,IAAAA,YAAY,CAACI,CAAC,CAACG,cAAH,CAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEH,GATF;;AAUAZ,EAAAA,SAAS,CAAE,MAAI;AACVK,IAAAA,KAAK,CAACgB,GAAN,CAAU,iCAAV,EACAC,IADA,CACMC,QAAD,IAAc;AAChBR,MAAAA,QAAQ,CAACQ,QAAQ,CAACC,IAAT,CAAcV,KAAf,CAAR,CADgB,CAEhB;AAGH,KANA,EAMEW,KANF,CAMQC,GAAG,IAAG;AACXR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,KARA;AAYJ,GAbQ,EAaP,EAbO,CAAT;AAcF,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA,2BACA;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAelB,QAAAA,KAAK,EAAE;AAAtB,OAAZ;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,IAAI,EAAEK,KADR;AAEE,QAAA,OAAO,EAAER,OAFX;AAGE,QAAA,QAAQ,EAAE,CAHZ;AAIE,QAAA,iBAAiB,MAJnB;AAKE,QAAA,uBAAuB,MALzB;AAME,QAAA,UAAU,EAAE,IANd;AAOE,QAAA,aAAa,MAPf;AAQE,QAAA,sBAAsB,EAAIU;AAR5B;AAAA;AAAA;AAAA;AAAA,cADF,eAWA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXA,eAYA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA9CuBL,I;;KAAAA,I","sourcesContent":["import  React ,{useEffect,useState} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport axios from 'axios';\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 120 },\r\n  {\r\n    field: 'email',\r\n    headerName: 'Email',\r\n    width: 300,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'role',\r\n    headerName: 'Role',\r\n    width: 300,\r\n    editable: false,\r\n  },\r\n\r\n];\r\n\r\n\r\n\r\n\r\n\r\nexport default function Grid() {\r\n    const [select, setSelection] = useState([]);\r\n    const [users,setUsers]=useState([]);\r\n\r\n    const handleRowSelection = (e) => {\r\n       \r\n        // prints correct indexes of selected rows\r\n         console.log(e);\r\n         \r\n         // missing the first row selected\r\n         setSelection(e.selectionModel);\r\n         console.log(select);\r\n \r\n     }\r\n    useEffect( ()=>{\r\n         axios.get(\"http://127.0.0.1:8000/api/users\")\r\n        .then((response) => {\r\n            setUsers(response.data.users);\r\n            // console.log(response.data.users);\r\n           \r\n            \r\n        }).catch(err =>{\r\n            console.log(err)\r\n        })\r\n        \r\n        \r\n\r\n    },[]);\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n    <div style={{ height: 400, width: '80%' }}>\r\n      <DataGrid\r\n        rows={users}\r\n        columns={columns}\r\n        pageSize={5}\r\n        checkboxSelection\r\n        disableSelectionOnClick\r\n        autoHeight={true}\r\n        NoRowsOverlay\r\n        onSelectionModelChange = {handleRowSelection}\r\n      />\r\n    <Button variant=\"contained\" color=\"primary\">Editer</Button>\r\n    <Button variant=\"contained\" color=\"secondary\">Supprimer</Button>\r\n    </div>\r\n    </Container>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}