{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\Asma\\\\PFA\\\\salma\\\\app2\\\\Back\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, initialState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./Components/Login/Login\";\nimport Acceuil from \"./Components/Interfaces/Acceuil\";\nimport Paperbase from \"./Components/Demandes/Paperbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(initialState);\n  const [role, setRole] = useState(initialState);\n  const [logedOut, setLogedOut] = useState(initialState);\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n\n    if (loggedInUser) {\n      var _foundUser$user, _foundUser$user$roles;\n\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser === null || foundUser === void 0 ? void 0 : foundUser.user);\n      setRole((_foundUser$user = foundUser.user) === null || _foundUser$user === void 0 ? void 0 : (_foundUser$user$roles = _foundUser$user.roles[0]) === null || _foundUser$user$roles === void 0 ? void 0 : _foundUser$user$roles.id);\n      setLogedOut(JSON.parse(localStorage.getItem(\"logedOut\")));\n    } //console.log(JSON.parse(loggedInUser));\n\n  }, []); // an empty array to check if there's a logged in user the first time the app loads.\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: () => /*#__PURE__*/_jsxDEV(Login, {\n            logedOut: logedOut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), !user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Route, {\n            component: () => /*#__PURE__*/_jsxDEV(Login, {\n              logedOut: logedOut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Acceuil\",\n            component: () => /*#__PURE__*/_jsxDEV(Acceuil, {\n              user: user,\n              role: role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Demandes\",\n            component: () => /*#__PURE__*/_jsxDEV(Paperbase, {\n              user: user,\n              role: role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fMxhuYb31ojPBd0fvrQtSJhRwgA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Documents/Asma/PFA/salma/app2/Back/src/App.js"],"names":["React","useState","useEffect","initialState","BrowserRouter","Router","Route","Switch","Login","Acceuil","Paperbase","App","user","setUser","role","setRole","logedOut","setLogedOut","loggedInUser","localStorage","getItem","foundUser","JSON","parse","roles","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,YAArC,QAAyD,OAAzD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACE,YAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACE,YAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACE,YAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAArB;;AACA,QAAIF,YAAJ,EAAkB;AAAA;;AAChB,YAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAlB;AACAL,MAAAA,OAAO,CAACQ,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAET,IAAZ,CAAP;AACAG,MAAAA,OAAO,oBAACM,SAAS,CAACT,IAAX,6EAAC,gBAAgBY,KAAhB,CAAsB,CAAtB,CAAD,0DAAC,sBAA0BC,EAA3B,CAAP;AACAR,MAAAA,WAAW,CAACK,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAD,CAAX;AACD,KAPa,CAQd;;AACD,GATQ,EASN,EATM,CAAT,CALa,CAcL;;AAER,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAE,mBAAO,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,EAEI,CAACJ,IAAD,gBACD;AAAA,uCAAG,QAAC,KAAD;AAAO,YAAA,SAAS,EAAE,mBAAO,QAAC,KAAD;AAAO,cAAA,QAAQ,EAAEI;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAAH;AAAA,wBADC,gBAGD;AAAA,uCAAG,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,UAAlB;AAA6B,YAAA,SAAS,EAAE,mBAAO,QAAC,OAAD;AAAS,cAAA,IAAI,EAAEJ,IAAf;AAAqB,cAAA,IAAI,EAAEE;AAA3B;AAAA;AAAA;AAAA;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAAH,eACG,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,WAAlB;AAA8B,YAAA,SAAS,EAAE,mBAAO,QAAC,SAAD;AAAW,cAAA,IAAI,EAAEF,IAAjB;AAAuB,cAAA,IAAI,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,kBADH;AAAA,wBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA/BQH,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, initialState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport Acceuil from \"./Components/Interfaces/Acceuil\";\r\nimport Paperbase from \"./Components/Demandes/Paperbase\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(initialState);\r\n  const [role, setRole] = useState(initialState);\r\n  const [logedOut, setLogedOut] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"user\");\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      setUser(foundUser?.user);\r\n      setRole(foundUser.user?.roles[0]?.id);\r\n      setLogedOut(JSON.parse(localStorage.getItem(\"logedOut\")));\r\n    }\r\n    //console.log(JSON.parse(loggedInUser));\r\n  }, []); // an empty array to check if there's a logged in user the first time the app loads.\r\n  \r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={() => (<Login logedOut={logedOut} />)}/>\r\n          { !user ? \r\n          (<> <Route component={() => (<Login logedOut={logedOut} />)}/> </>) \r\n          : \r\n          (<> <Route exact path=\"/Acceuil\" component={() => (<Acceuil user={user} role={role} />)}/> \r\n              <Route exact path=\"/Demandes\" component={() => (<Paperbase user={user} role={role} />)}/>\r\n          </>)}\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}