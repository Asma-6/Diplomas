[{"D:\\SuiviDiplomesFront\\src\\index.js":"1","D:\\SuiviDiplomesFront\\src\\App.js":"2","D:\\SuiviDiplomesFront\\src\\components\\login\\Login.js":"3","D:\\SuiviDiplomesFront\\src\\services\\AuthService.js":"4","D:\\SuiviDiplomesFront\\src\\services\\authService.js":"5","D:\\SuiviDiplomesFront\\src\\components\\Users\\UsersGrid.js":"6","D:\\SuiviDiplomesFront\\src\\components\\Users\\UserForm.js":"7","D:\\SuiviDiplomesFront\\src\\components\\formulaires\\Form.js":"8","D:\\SuiviDiplomesFront\\src\\components\\formulaires\\FormsPage.js":"9","D:\\SuiviDiplomesFront\\src\\components\\formulaires\\Message.js":"10","D:\\SuiviDiplomesFront\\src\\components\\Users\\Profil.js":"11","D:\\SuiviDiplomesFront\\src\\components\\Users\\ProfilInfos.js":"12","D:\\SuiviDiplomesFront\\src\\components\\Users\\ProfilEdit.js":"13"},{"size":236,"mtime":1628127380317,"results":"14","hashOfConfig":"15"},{"size":530,"mtime":1628711753381,"results":"16","hashOfConfig":"15"},{"size":5494,"mtime":1628321233160,"results":"17","hashOfConfig":"15"},{"size":526,"mtime":1628128963531,"results":"18","hashOfConfig":"15"},{"size":526,"mtime":1628128963531,"results":"19","hashOfConfig":"15"},{"size":11173,"mtime":1628710640578,"results":"20","hashOfConfig":"15"},{"size":12055,"mtime":1628636005621,"results":"21","hashOfConfig":"15"},{"size":4594,"mtime":1628645106534,"results":"22","hashOfConfig":"15"},{"size":3374,"mtime":1628645581652,"results":"23","hashOfConfig":"15"},{"size":695,"mtime":1628638190877,"results":"24","hashOfConfig":"15"},{"size":2953,"mtime":1628707469506,"results":"25","hashOfConfig":"15"},{"size":866,"mtime":1628706369896,"results":"26","hashOfConfig":"15"},{"size":10223,"mtime":1628707586386,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1isry1c",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\SuiviDiplomesFront\\src\\index.js",[],["60","61"],"D:\\SuiviDiplomesFront\\src\\App.js",["62","63","64","65","66"],"D:\\SuiviDiplomesFront\\src\\components\\login\\Login.js",["67"],"import React, { useState} from 'react';\r\nimport axios from 'axios';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport img from \"../../img.jpg\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(8),\r\n    backgroundColor: 'rgba(255,255,255,0.8)',\r\n    \r\n  },\r\n  nav:{\r\n      width: \"100%\"\r\n  },\r\n  image:{\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: \"no-repeat\",\r\n   \r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const handleEmail =(e) =>{\r\n      setEmail(e.target.value);\r\n      \r\n  };\r\n  const handlePassword =(e) =>{\r\n      setPassword(e.target.value);\r\n      \r\n  };\r\n  const handleLogin = (e) =>{\r\n      e.preventDefault();\r\n      console.log('Login');\r\n      axios.post(\"http://127.0.0.1:8000/api/login\", {email,password})\r\n      .then((response) => {\r\n          console.log(response)\r\n      }).catch(err =>{\r\n          console.log(err)\r\n      })\r\n};\r\n\r\n  return (\r\n <div className={classes.image}>\r\n  \r\n  <BottomNavigation\r\n      className={classes.nav}\r\n      showLabels\r\n    >\r\n      <BottomNavigationAction label=\"Suivi Diplomes\"  />\r\n    </BottomNavigation>\r\n\r\n\r\n  <Grid   container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          >\r\n\r\n    <Card className={classes.root}>\r\n    <CardContent >\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <ExitToAppIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Se connecter\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleLogin} >\r\n              <TextField\r\n                onChange={handleEmail}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <PersonIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"standard\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                placeholder=\"Email *\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n              onChange={handlePassword}\r\n              InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                       <VpnKeyIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"standard\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                placeholder=\"Password *\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"secondary\" />}\r\n                label=\"Se souvenir de moi\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Se connecter\r\n              </Button>\r\n            </form>\r\n          </div>\r\n          <Box mt={8}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n    </div> \r\n  );\r\n}","D:\\SuiviDiplomesFront\\src\\services\\AuthService.js",[],["68","69"],"D:\\SuiviDiplomesFront\\src\\services\\authService.js",[],"D:\\SuiviDiplomesFront\\src\\components\\Users\\UsersGrid.js",[],"D:\\SuiviDiplomesFront\\src\\components\\Users\\UserForm.js",["70","71","72","73","74"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport img from \"../../img.jpg\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport Container from '@material-ui/core/Container';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Button from '@material-ui/core/Button';\r\nimport swal from 'sweetalert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport AddBoxRoundedIcon from '@material-ui/icons/AddBoxRounded';\r\n\r\n\r\nconst API_URL = \"http://127.0.0.1:8000/api/\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n\r\n  },\r\n  media: {\r\n    height: 80,\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  fab: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(5),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  closeIcon: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nexport default function UserForm(props) {\r\n  const classes = useStyles();\r\n  const [roles, setRoles] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n  const [errors, setErrors] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [idUser, setIdUser] = useState('');\r\n  const [formType, setFormType] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    setOpen(props.handleOpen);\r\n    props.user ? setRole(props.user.roleId) : setRole('');\r\n    props.user ? setEmail(props.user.email) : setEmail('');\r\n    props.user ? setIdUser(props.user.id) : setIdUser('');\r\n    setFormType(props.formType);\r\n    props.handleOpen ? setOpen(props.handleOpen) : setOpen(false);\r\n    props.roles ? setRoles(props.roles) : setRoles([]);\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  ///////////////////////////////////////////\r\n  const handleRole = (e) => {\r\n    setRole(e.target.value);\r\n  }\r\n\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    if (email.length < 8) {\r\n      setErrors({ ...errors, email: \"Minimum : 6 caractÃ¨res\" });\r\n    }\r\n    else {\r\n      setErrors({ ...errors, email: null });\r\n    }\r\n  }\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value);\r\n    console.log(password);\r\n    if (password?.length < 7) {\r\n      setErrors({ ...errors, password: \"Le mot de passe doit dÃ©passer 7 caractÃ¨res\" });\r\n    } else {\r\n      setErrors({ ...errors, password: null });\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  const handlePasswordConfirm = (e) => {\r\n    setPasswordConfirm(e.target.value);\r\n    console.log(passwordConfirm);\r\n\r\n  }\r\n\r\n\r\n\r\n  const handleClose = (e) => {\r\n    window.location.reload();\r\n    // setOpen(false)\r\n  }\r\n  /////////////////////////////////////////\r\n\r\n  const handleSumbit = (e) => {\r\n    e.preventDefault();\r\n    if (props.formType === \"add\") {\r\n      console.log(\"add\");\r\n      if (passwordConfirm === password) {\r\n        setErrors({ ...errors, passwordConfirm: null });\r\n      } else {\r\n        setErrors({ ...errors, passwordConfirm: \"Les password doivent etre identiques\" });\r\n      }\r\n      if (!Object.values(errors).some((x) => x !== null && x !== \"\")) {\r\n        console.log('heeere submit add');\r\n        console.log(password);\r\n        console.log(passwordConfirm);\r\n        if (password === passwordConfirm) {\r\n          axios.post(API_URL + \"users\",\r\n            {\r\n              email,\r\n              password,\r\n              role\r\n\r\n            }).then((response) => {\r\n              console.log(response);\r\n              swal({\r\n                title: response.data.message,\r\n                text: \"\",\r\n                icon: \"success\",\r\n               \r\n              });\r\n              setTimeout(function(){\r\n                window.location.reload();\r\n             }, 300);\r\n              \r\n            }).catch(err => {\r\n              console.log(err.response);\r\n              if (err.response.status === 500) {\r\n                setMessage(\"Cette adresse mail est deja utilisÃ©e\");\r\n              }\r\n            })\r\n\r\n\r\n        } else {\r\n          setMessage(\"Les password doivent etre identiques\");\r\n        }\r\n      }\r\n    }\r\n    else if (props.formType === \"edit\") {\r\n      console.log(\"edit\");\r\n      if (passwordConfirm === password) {\r\n        setErrors({ ...errors, passwordConfirm: null });\r\n      } else {\r\n        setErrors({ ...errors, passwordConfirm: \"Les password doivent etre identiques\" });\r\n      }\r\n      if (!Object.values(errors).some((x) => x !== null && x !== \"\")) {\r\n        console.log('heeere submit Edit');\r\n        if (password === passwordConfirm) {\r\n          axios.put(API_URL + \"users/\" + idUser,\r\n            {\r\n              email,\r\n              password,\r\n              role\r\n\r\n            }).then((response) => {\r\n              console.log(response);\r\n              swal({\r\n                title: response.data.message,\r\n                text: \"\",\r\n                icon: \"success\",\r\n              });\r\n              setTimeout(function(){\r\n                window.location.reload();\r\n             }, 300);\r\n              \r\n              \r\n            }).catch(err => {\r\n              console.log(err.response);\r\n              if (err.response.status === 500) {\r\n                setMessage(\"Cette adresse mail est deja utilisÃ©e\");\r\n              }\r\n            })\r\n\r\n        } else {\r\n          setMessage(\"Les password doivent etre identiques\");\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogContent>\r\n              <IconButton color=\"primary\" aria-label=\"upload picture\"\r\n                component=\"span\" size=\"small\" className={classes.closeIcon}>\r\n                <CloseIcon onClick={handleClose}/>\r\n              </IconButton>\r\n          <Card className={classes.root}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image=\"\"\r\n                title=\"\"\r\n              />\r\n              <CardContent>\r\n\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                  {props.title}\r\n                </Typography>\r\n                {message && (\r\n                  <Alert\r\n                    severity=\"error\"\r\n                    onClose={() => {\r\n                      setMessage(null);\r\n                    }}\r\n                  >\r\n                    {message}\r\n                  </Alert>\r\n                )}\r\n\r\n              </CardContent>\r\n\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Container component=\"main\" maxWidth=\"xs\">\r\n                <form className={classes.form} onSubmit={handleSumbit} validate>\r\n                  <TextField\r\n                    onChange={handleEmail}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    value={email}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                    error={Boolean(errors?.email)}\r\n                    helperText={errors?.email}\r\n                  />\r\n                  <TextField\r\n                    onChange={handlePassword}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <VpnKeyIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    name=\"password\"\r\n                    placeholder=\"********\"\r\n                    label=\"Nouveau Password \"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    error={Boolean(errors?.password)}\r\n                    helperText={errors?.password}\r\n                  />\r\n\r\n                  <TextField\r\n                    onChange={handlePasswordConfirm}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <VpnKeyIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    name=\"password\"\r\n                    placeholder=\"********\"\r\n                    label=\"Confirmer Password \"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    error={Boolean(errors?.passwordConfirm)}\r\n                    helperText={errors?.passwordConfirm}\r\n                  />\r\n\r\n\r\n                  <TextField\r\n                    id=\"standard-select-currency\"\r\n                    select\r\n                    label=\"Profil\"\r\n                    onChange={handleRole}\r\n                    value={role}\r\n                    helperText=\"Choisissz un profil\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n                  >\r\n                    {roles.map((role) => (\r\n                      <MenuItem key={role.id} value={role.id}>\r\n                        {role.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                  {props.formType === \"add\" ?\r\n                    <Button type='submit' variant=\"contained\" color=\"primary\" size=\"small\"\r\n                      className={classes.fab} startIcon={<AddBoxRoundedIcon />}\r\n                    >\r\n                      Ajouter</Button>\r\n                    :\r\n                    <Button\r\n                      variant=\"contained\" color=\"primary\" size=\"small\"\r\n                      type='submit' className={classes.fab} startIcon={<EditIcon />}\r\n\r\n                    >Editer</Button>\r\n                  }\r\n                </form>\r\n              </Container>\r\n            </CardActions>\r\n          </Card>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","D:\\SuiviDiplomesFront\\src\\components\\formulaires\\Form.js",["75","76"],"import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddBoxRoundedIcon from '@material-ui/icons/AddBoxRounded';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\nimport Message from './Message';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\nconst API_URL = \"http://127.0.0.1:8000/api/\";\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '40ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Form(props) {\r\n    const classes = useStyles();\r\n    const [formId, setFormId] = useState('');\r\n    const [lien, setLien] = useState('');\r\n    const [api_id, setApiId] = useState('');\r\n    const [type_formulaire, setTypeFormulaire] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    const [errors, setErrors] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [disableButton, setDisableButton] = useState(true);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setFormId(props.form.id);\r\n        setTypeFormulaire(props.form.type_formulaire);\r\n        setLien(props.form.lien);\r\n        setApiId(props.form.api_id);\r\n        \r\n\r\n    },[])\r\n\r\n\r\n    const handleLien = (event) => {\r\n        setLien(event.target.value);\r\n        setDisableButton(false);\r\n    };\r\n\r\n    const handleApiId = (event) => {\r\n        setApiId(event.target.value);\r\n        setDisableButton(false);\r\n    };\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        axios.put(`${API_URL}formulaires/${formId}`,\r\n            {\r\n                type_formulaire,\r\n                lien,\r\n                api_id\r\n\r\n            }).then((response) => {\r\n                console.log(response);\r\n                setSuccess(true);\r\n                setMessage(response.data.message);\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n                setErrors(true);\r\n                setMessage(\"Une erreur est survenu, veuillez rÃ©essayer..\");\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {success && <Message message={message} success=\"success\"/>}\r\n            {errors && <Message message={message} success=\"error\"/>}\r\n\r\n            \r\n            <form className={classes.root} onSubmit={handleSubmit}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                    {type_formulaire}\r\n                </Typography><br />\r\n                <div>\r\n                    <TextField\r\n                        onChange={handleLien}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                            <LinkIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                        }}\r\n                        value={lien}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"lien\"\r\n                        label=\"Lien du formulaire GOOGLE FORM\"\r\n                        name=\"lien\"\r\n                        autoFocus\r\n\r\n\r\n\r\n                    />\r\n                    <TextField\r\n                       onChange={handleApiId}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                            <CodeIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                        }}\r\n                        id=\"outlined-uncontrolled\"\r\n                        label=\"API ID du formulaire\"\r\n                        value={api_id}\r\n                        variant=\"outlined\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <Button type='submit' variant=\"contained\" color=\"primary\"\r\n                    startIcon={<AddBoxRoundedIcon />}  disabled={disableButton} \r\n                >Modifier</Button>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}","D:\\SuiviDiplomesFront\\src\\components\\formulaires\\FormsPage.js",[],"D:\\SuiviDiplomesFront\\src\\components\\formulaires\\Message.js",["77"],"import React, {useEffect , useState} from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n \r\nexport default function Message(props) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n      setOpen(props.success);\r\n    });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <Snackbar open={open} autoHideDuration={1000} onClose={handleClose}>\r\n        <Alert severity={props.success} onClose={handleClose}>\r\n          {props.message}\r\n        </Alert>\r\n      </Snackbar>\r\n  );\r\n}\r\n","D:\\SuiviDiplomesFront\\src\\components\\Users\\Profil.js",["78","79"],"D:\\SuiviDiplomesFront\\src\\components\\Users\\ProfilInfos.js",["80"],"D:\\SuiviDiplomesFront\\src\\components\\Users\\ProfilEdit.js",["81","82","83","84","85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":17},{"ruleId":"91","severity":1,"message":"96","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":12},{"ruleId":"91","severity":1,"message":"97","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":17},{"ruleId":"91","severity":1,"message":"98","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":14},{"ruleId":"91","severity":1,"message":"99","line":17,"column":8,"nodeType":"93","messageId":"94","endLine":17,"endColumn":11},{"ruleId":"87","replacedBy":"100"},{"ruleId":"89","replacedBy":"101"},{"ruleId":"91","severity":1,"message":"99","line":14,"column":8,"nodeType":"93","messageId":"94","endLine":14,"endColumn":11},{"ruleId":"91","severity":1,"message":"102","line":81,"column":10,"nodeType":"93","messageId":"94","endLine":81,"endColumn":18},{"ruleId":"91","severity":1,"message":"103","line":82,"column":10,"nodeType":"93","messageId":"94","endLine":82,"endColumn":17},{"ruleId":"91","severity":1,"message":"104","line":82,"column":19,"nodeType":"93","messageId":"94","endLine":82,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":96,"column":6,"nodeType":"107","endLine":96,"endColumn":8,"suggestions":"108"},{"ruleId":"91","severity":1,"message":"109","line":18,"column":10,"nodeType":"93","messageId":"94","endLine":18,"endColumn":15},{"ruleId":"105","severity":1,"message":"110","line":52,"column":7,"nodeType":"107","endLine":52,"endColumn":9,"suggestions":"111"},{"ruleId":"105","severity":1,"message":"112","line":14,"column":5,"nodeType":"93","endLine":14,"endColumn":14,"suggestions":"113"},{"ruleId":"91","severity":1,"message":"114","line":12,"column":8,"nodeType":"93","messageId":"94","endLine":12,"endColumn":18},{"ruleId":"91","severity":1,"message":"115","line":13,"column":8,"nodeType":"93","messageId":"94","endLine":13,"endColumn":24},{"ruleId":"91","severity":1,"message":"116","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":30},{"ruleId":"91","severity":1,"message":"99","line":14,"column":8,"nodeType":"93","messageId":"94","endLine":14,"endColumn":11},{"ruleId":"91","severity":1,"message":"117","line":19,"column":8,"nodeType":"93","messageId":"94","endLine":19,"endColumn":16},{"ruleId":"91","severity":1,"message":"118","line":26,"column":8,"nodeType":"93","messageId":"94","endLine":26,"endColumn":25},{"ruleId":"91","severity":1,"message":"119","line":73,"column":10,"nodeType":"93","messageId":"94","endLine":73,"endColumn":15},{"ruleId":"91","severity":1,"message":"120","line":73,"column":17,"nodeType":"93","messageId":"94","endLine":73,"endColumn":25},{"ruleId":"105","severity":1,"message":"121","line":93,"column":6,"nodeType":"107","endLine":93,"endColumn":8,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'UsersGrid' is defined but never used.","'Form' is defined but never used.","'FormsPage' is defined but never used.","'Profil' is defined but never used.","'img' is defined but never used.",["123"],["124"],"'formType' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.formType', 'props.handleOpen', 'props.roles', and 'props.user'. Either include them or remove the dependency array. If 'setOpen' needs the current value of 'props.handleOpen', you can also switch to useReducer instead of useState and read 'props.handleOpen' in the reducer.","ArrayExpression",["125"],"'Alert' is defined but never used.","React Hook useEffect has missing dependencies: 'props.form.api_id', 'props.form.id', 'props.form.lien', and 'props.form.type_formulaire'. Either include them or remove the dependency array. If 'setFormId' needs the current value of 'props.form.id', you can also switch to useReducer instead of useState and read 'props.form.id' in the reducer.",["126"],"React Hook useEffect contains a call to 'setOpen'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.success] as a second argument to the useEffect Hook.",["127"],"'profilIcon' is defined but never used.","'profilIconCircle' is defined but never used.","'useTheme' is defined but never used.","'MenuItem' is defined but never used.","'AddBoxRoundedIcon' is defined but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.handleOpen' and 'props.user'. Either include them or remove the dependency array. If 'setOpen' needs the current value of 'props.handleOpen', you can also switch to useReducer instead of useState and read 'props.handleOpen' in the reducer.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [props.formType, props.handleOpen, props.roles, props.user]",{"range":"137","text":"138"},"Update the dependencies array to be: [props.form.api_id, props.form.id, props.form.lien, props.form.type_formulaire]",{"range":"139","text":"140"},"Add dependencies array: [props.success]",{"range":"141","text":"142"},"Update the dependencies array to be: [props.handleOpen, props.user]",{"range":"143","text":"144"},[3067,3069],"[props.formType, props.handleOpen, props.roles, props.user]",[1646,1648],"[props.form.api_id, props.form.id, props.form.lien, props.form.type_formulaire]",[404,404],", [props.success]",[2937,2939],"[props.handleOpen, props.user]"]